---
title: "Registro de Presencia de Mamíferos en Regiones Socioeconómicas en Costa Rica"
format: 
  html:
    page-layout: custom
    theme: Flatly   
    margin-top: 40px
    margin-left: 40px
    margin-bottom: 15px        
    margin-right: 15px
server: shiny
---

---
toc: true
toc_float: true
toc_title: "Tabla de Contenidos" 
---


## I.Introducción

El siguiente trabajo tiene como objetivo el análisis exploratorio del conjunto de datos de Regiones Socioeconómicas de Costa Rica proporcionado por [Atlas digital de Costa Rica 2014](https://repositoriotec.tec.ac.cr/handle/2238/6749?show=full), y el Registros de Presencia de Mamíferos en Costa Rica obtenido a través de una consulta al portal de datos de la [Infraestructura Mundial de Información en Biodiversidad (GBIF)](https://www.gbif.org/occurrence/download/0031158-230530130749713), que contienen valiosa información sobre el Registro de Presencia de Mamíferos en Costa Rica.

A partir de este análisis, se desarrollará una aplicación web interactiva que incluirá visualizaciones relevantes sobre el Registro de Presencia de Mamíferos en las Regiones Socioeconómicas de Costa Rica. Para lograr esto, se emplearán técnicas de visualización de datos como tablas interactivas, gráficos de barras y un mapa. La aplicación web permitirá a los usuarios explorar y comprender mejor la distribución de mamíferos en diferentes regiones socioeconómicas de Costa Rica.

## II Parte. Carga de Paquetes, Datos y Uniones espaciales




```{r}
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false

# Carga de paquetes
library(shiny)
library(tidyverse)
library(DT)
library(plotly)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(viridisLite)
library(readr)
library(dplyr)
library(ggplot2)
library(terra)
library(ggthemes)
library(quarto)
library(rsconnect)
library(leaflet.providers)
library(leaflet.minicharts)
library(leaflet.esri)
library(RColorBrewer)
```


#### *Carga de datos*
```{r}
#| label: carga-datos
#| context: data

# Carga de datos de regiones socioeconónicas de Costa Rica
regiones <- 
  st_read("regiones_socioeconomicas_simp_10m.geojson",
          quiet = TRUE) |> 
  st_transform(4326)

# Carga de datos de registros de presencia de mamíferos en Costa Rica
mamiferos <-
  st_read(
    "mamiferos.csv",
    options = c(
      "X_POSSIBLE_NAMES=decimalLongitude", 
      "Y_POSSIBLE_NAMES=decimalLatitude"  
    ),
    quiet = TRUE
  )

# WGS84 de mamiferos  
st_crs(mamiferos) <- 4326

#Uniones espaciales

# Unión espacial de mamíferos y regiones
mamiferos_union_regiones <-
  st_join(
    x = mamiferos,
    y = dplyr::select(regiones, region), 
    join = st_within
  )

# Conteo de la presencia de mamíferos en las regiones
registros_presencia<-
  mamiferos_union_regiones |>
  st_drop_geometry() |>
  group_by(region) |>
  summarise(cantidad_registros = n())

# Unión (no espacial) de regiones socioeconómicas y presencia de mamíferos
regiones_union_registros <-
  left_join(
    x = regiones,
    y = registros_presencia,
    by = "region"
  ) |>
  replace_na(list(registros_presencia = 0))

# Registro de mamiferos en las regiones
mamiferos_regiones <-
  st_filter(
    x = mamiferos,
    y = regiones, 
    .predicate = st_within
  ) 

# Conversión de datos
mamiferos_union_regiones <-
	mamiferos_union_regiones |>
	mutate(
		year = as.integer(year),
		month = as.integer(month),
		day = as.integer(day)
	)

# Paleta de colores de Presencia de especies
colores_registros_presencia <-
  colorNumeric(
    palette = "Reds",
    domain = regiones_union_registros$registros_presencia,
    na.color = "transparent"
  )

# Paleta de colores de especies
colores_mapa <- colorFactor(
  palette = viridis(length(unique(mamiferos$gbifID))), 
  domain = mamiferos$gbifID
)

```

## III Parte. Tabla, Mapa y Gráfico Interactivo
```{r}
#| label: panel-widgets-entrada
#| panel: sidebar

# Widget de lista de selección
lista_especies <- unique(mamiferos_union_regiones$species) 
lista_especies <- sort(lista_especies) #
lista_especies <- c("Todas", lista_especies) 

selectInput(
  inputId = "especie",
  label = "Especie",
  choices = lista_especies,
  selected = "Todas"
)

# WidgetDeslizador de rango de meses 

lista_meses <- unique(mamiferos_union_regiones$month) 
lista_meses <- sort(lista_meses) 
lista_meses <- c("Todos", lista_meses) 

sliderInput(
  inputId = "meses_slider",
  label = "Meses",
  min = min(mamiferos_union_regiones$month, na.rm = TRUE),
  max = max(mamiferos_union_regiones$month, na.rm = TRUE),
  value = (c(1, 12))
)

# Widget Botones de radio de regiones socioeconómicas 
lista_regiones <- unique(mamiferos_union_regiones$region) 
lista_regiones <- sort(lista_regiones) #
lista_regiones <- c("Todas", lista_regiones) 

radioButtons("region", "Selecciona una región socioeconómica:",
             choices = lista_regiones,
             selected = "Todas")


```

```{r}
#| label: panel-widgets-salida
#| panel: center

# Widgets-Salida-Tabla
h3("Registros de Presencia de Mamíferos")
# Línea vacía
HTML("<p>")

dataTableOutput(outputId = "tabla")

# Widgets-Salida-Mapa
h3("Mapa de Registros de Presencia de Mamiferos")
# Línea vacía
HTML("<p>")
leafletOutput(outputId = "mapa")

# Widgets-Salida-Gráfico
h3("Gráfico: Cantidad de Registros de presencia en Regiones Socioeconómicas")
HTML("<p>")

# Salida de gráfico interactivo
plotlyOutput(outputId = "grafico")

```


```{r}
#| label: servidor
#| context: server

# Función reactiva para filtrar los registros de presencia de mamíferos
# de acuerdo con los filtros especificados por el usuario
filtrar_mamiferos_union_region <- reactive({
  # Valor inicial del objeto que va a retornarse
  mamiferos_union_regiones_filtrados <- mamiferos_union_regiones
  
   # Se realiza el filtro, solamente si el usuario ha seleccionado 
  # una opción diferente a "Todas" en la lista de selección de especies
  if (input$especie != "Todas") {
    mamiferos_union_regiones_filtrados <-
      mamiferos_union_regiones_filtrados |>
      filter(species == input$especie)
  }
  
   # Se realiza el filtro, solamente si el usuario ha seleccionado 
  # una opción diferente a "Todas" en la lista de selección de regiones
  if (input$region != "Todas") {
  	mamiferos_union_regiones_filtrados <-
  		mamiferos_union_regiones_filtrados |>
  		filter(region == input$region)
  }
  
   mamiferos_union_regiones_filtrados <-
  	mamiferos_union_regiones_filtrados |>
  	filter(month == input$meses_slider)

  return(mamiferos_union_regiones_filtrados)
}) 


output$grafico <- renderPlotly({
	
  mamiferos_union_regiones <- 
    filtrar_mamiferos_union_region()
  
	
	cantidad_registros_region <-
	  mamiferos_union_regiones |>
	  st_drop_geometry() |>
	  group_by(region) |>
	  summarize(cantidad_registros = n()) |> 
		drop_na(region) 
  
	
# Tabla interactiva de Registros de Presencia
output$tabla <- renderDataTable({
  
  
	cantidad_registros_region <-
	  mamiferos_union_regiones |>
	  st_drop_geometry() |>
	  group_by(region) |>
	  summarize(cantidad_registros = n()) |> 
		drop_na(region) 

  cantidad_registros_region |>
    dplyr::select(region, cantidad_registros) |>
    datatable(
      colnames = c("Region", "Registros de presencia"),
      options = list(
        pageLength = 5,
        language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
      )
    )
})
	
	 # Gráfico en ggplot2
	grafico_ggplot2 <-
	  cantidad_registros_region |>
	  ggplot(
	    aes(
	      x = reorder(region, -cantidad_registros), 
	      y = cantidad_registros
	    )
	  ) +
	  geom_col(
	    aes(
	      text = paste0(
	        "Region", ": ", region, "\n",
	        "Cantidad de registros: ", cantidad_registros
	      )
	    )    
	  ) +
	 xlab("Región Socioeconómica") +
	  ylab("Cantidad de Registros de Presencia") +  
	  theme_igray() +
	  theme(axis.text.x = element_text(angle = 45, hjust = 1))
	
# Gráfico en plotly
ggplotly(grafico_ggplot2, tooltip = "text") |> 
  config(locale = 'es')	

})

# Mapa de Registros de Presencia

output$mapa <- renderLeaflet({
leaflet() |>
  setView(
    lng = -84.19452,
    lat = 9.572735,
    zoom = 7) |>
  addTiles(group = "Mapa general (OpenStreetMap)") |>
  addProviderTiles(
    providers$Esri.WorldImagery, 
    group = "Imágenes satelitales (ESRI World Imagery)"
  ) |> 
  addPolygons(
    data = regiones_union_registros,
    fillColor = ~ colores_registros_presencia(regiones_union_registros$registros_presencia),
    fillOpacity = 0.7,
    color = "black",
    stroke = TRUE,
    weight = 1.0,
    popup = paste(
      paste("<strong>Region:</strong>", regiones_union_registros$region),
      paste("<strong>Registros de presencia:</strong>", regiones_union_registros$registros_presencia),
      sep = '<br/>'
    ),
    group = "Registros de presencia coropletas"
  ) |>
  addScaleBar(
    position = "bottomleft", 
    options = scaleBarOptions(imperial = FALSE)
  ) |>    
  addLegend(
    position = "bottomleft",
    pal = colores_registros_presencia,
    values = regiones_union_registros$registros_presencia,
    group = "Registros de presencia coropletas",
    title = "Registros de presencia coropletas"
  ) |>
  addCircleMarkers(
    data = mamiferos_regiones,
    stroke = F,
    radius = 4,
    fillColor = ~colores_mapa(mamiferos_regiones$gbifID),
    fillOpacity = 1.0,
    popup = paste(
      paste0("<strong>Especie: </strong>", mamiferos_regiones$species),
      paste0("<strong>Localidad: </strong>", mamiferos_regiones$locality),
      paste0("<strong>Fecha: </strong>", mamiferos_regiones$eventDate),
      paste0("<strong>Fuente: </strong>", mamiferos_regiones$institutionCode),
      paste0("<a href='", mamiferos_regiones$occurrenceID, "'>Más información</a>"),
      sep = '<br/>'
    ),    
    group = "Registros de presencia"
  ) |>  
  addLayersControl(
    baseGroups = c(
      "Mapa general (OpenStreetMap)", 
      "Imágenes satelitales (ESRI World Imagery)"
    ),
    overlayGroups = c(
      "Registros de presencia coropletas",
      "Registros de presencia"
    )
  ) 
  
})

```
```

